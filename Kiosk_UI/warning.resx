<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>